#Title: "FFD_BLUP_GWAS_MLMM_MM4LMM"
#Author: "Laila Aqbouch"
#contact: "aqbouchlaila@gmail.com"
#date: 05/12/2023 
library(anyLib)
anyLib(c("devtools","apercu","data.table","mlmm","readr","readxl","hierfstat","corpcor","tibble","emma"))
#################  Import genotypic data  #########################################################################
SNP <- read_delim("positions.txt", 
                  delim = "\t", escape_double = FALSE, 
                  col_names = FALSE, trim_ws = TRUE)

names <- read_csv("sample_names.txt", 
                  col_names = FALSE)
###import imputed genotype file
imputed_geno_LFMM <- read_table("Oe9_CHR_scaff_WOGBM_NA_SNP_90_NA_indiv_25_MAC1_MAF_5_nuclear.lfmm_imputed.lfmm", 
                                col_names = FALSE)
genot.imp <- imputed_geno_LFMM
SNP$positions <- paste(SNP$X1,"_",SNP$X2, sep = "")
##add genotype names
genot.mat <- as.matrix(genot.imp)
rownames(genot.mat) <- names$X1
colnames(genot.mat) <- SNP$positions
#Calcul of MAF allele should be coded 012
p <- colMeans(genot.mat) / 2
q <- 1 - p
maf <- apply(cbind(p, q), 1, min)
#plot MAF (optional)
hist(maf, col = "grey", main = "", breaks = 50, xlim = c(0, 0.5))
##filter MAF at 0.05
sum(maf < 0.05)
genot.ok <- genot.mat[, maf >= 0.05]
dim(genot.ok)
##verification
p <- colMeans(genot.ok) / 2
q <- 1 - p
maf <- apply(cbind(p, q), 1, min)
hist(maf, col = "grey", main = "", breaks = 50, xlim = c(0, 0.5))
#clean environement
rm(genot.mat, genot.imp, maf, p, q)
####create map
map <- SNP[, c(3, 1, 2)]
colnames(map) <- c('SNP','Chr','Pos')
map$Chr <- sub('9','',map$Chr)
map$Chr <- sub('s','9',map$Chr)
map$Chr <- gsub('[Oe_LG]','',map$Chr)
# filter conserved SNP
map <- map[map$SNP %in% colnames(genot.ok), ]
map$Chr <- as.numeric(map$Chr)
#order by chromosome and position 
map <- map[order(map$Pos), ]
map <- map[order(map$Chr), ]
#################  Import phenotypic data  #########################################################################
phenot <- read_excel("Pheno_BLUP_FFD.xlsx")
head(phenot)
y_FFD <- phenot$BLUP_FFD_7yrs
names(y_FFD) <- phenot$Name_on_cluster
#verifier la distribution
y <- y_FFD
length(y)
ap(y)
#####verif data sorted
#order geno to fit pheno
genot.ok <- genot.ok[match(names(y), rownames(genot.ok)), ]
plot(match(rownames(genot.ok), names(y)))
plot(match(map$SNP, colnames(genot.ok)))

